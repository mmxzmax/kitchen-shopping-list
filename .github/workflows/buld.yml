name: Build App

on:
  push:
    branches:
      - main
env:
  REGISTRY: ghcr.io
  NODE_VER: 20.17.0

jobs:
  build-app:
    name: Build app
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Use Node.js ${{env.NODE_VER}}
        uses: actions/setup-node@v4
        with:
          node-version: ${{env.NODE_VER}}
          cache: 'npm'
      - run: npm ci
      - run: npm run build
      - name: Upload Build app result
        uses: actions/upload-artifact@v4
        with:
          name: buld_res
          path: |
                ./
                !node_modules
          retention-days: 0.15
  build-and-push-docker:
    name: build and push to registry
    needs: build-app
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - image: ghcr.io/${{ github.repository }}-backend
            file: ./apps/kitchen-list-backend/Dockerfile
          - image: ghcr.io/${{ github.repository }}-frontend
            file: ./apps/kitchen-list-frontend/Dockerfile
        
    steps:
      - name: Download build
        uses: actions/download-artifact@v4
        with:
          name: buld_res
      - name: Log in to the Container registry
        uses: docker/login-action@v3.0.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.BUILD_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          images: ${{ matrix.image }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5.3.0
        with:
          context: .
          file: ${{matrix.file}}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
